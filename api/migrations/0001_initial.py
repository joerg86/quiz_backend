# Generated by Django 3.0.5 on 2020-05-01 13:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Frage')),
                ('model_answer', models.TextField(verbose_name='Musterantwort')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('state', models.CharField(choices=[('open', 'offen'), ('playing', 'spielt'), ('archived', 'archiviert')], default='open', max_length=30)),
                ('mode', models.CharField(choices=[('train', 'Training'), ('competition', 'Wettkampf')], default='train', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_as_creator', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Topic', verbose_name='Thema')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(choices=[('question', 'Erarbeitungsphase'), ('answer', 'Fragephase'), ('scoring', 'Bewertungsphase'), ('done', 'Abgeschlossen')], default='question', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_current_set', to='api.Question')),
                ('questions', models.ManyToManyField(blank=True, to='api.Question')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Team')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Topic'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(verbose_name='Antwort')),
                ('score', models.PositiveIntegerField(choices=[(0, 'falsch'), (1, 'teilweise richtig'), (3, 'richtig')], verbose_name='Bewertung')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Question', verbose_name='Frage')),
            ],
        ),
    ]
